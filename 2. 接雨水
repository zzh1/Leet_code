题目描述

    给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。



    上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。 感谢 Marcos 贡献此图。

    示例:

    输入: [0,1,0,2,1,0,1,3,2,1,2,1]
    输出: 6

    来源：力扣（LeetCode）
    链接：https://leetcode-cn.com/problems/trapping-rain-water
    著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

思考：
    发现了写规律，自己去尝试写，但是写的不顺，总觉的有问题。最终还是看了题解，按照三种方法写了一遍

代码：
 class Solution {

    /**
     * @param Integer[] $height
     * @return Integer
     */
    function trap($height) {
        
        //------------方法一：暴力法-------------------
        /*
        $ans = 0;
        $len = count($height);
        for($i = 1; $i<$len-1;$i++){
            //求出左边的最大值left_max
            $left_max = 0;
            for($j=$i;$j>=0;$j--){
                $left_max = max($left_max,$height[$j]); 
            }
            //求出右边的最大至right_max
            $right_max = 0;
            for($j=$i;$j<$len;$j++){
                $right_max = max($right_max,$height[$j]);
            }
            
            //计算出本处接的雨水，加入总雨水中
            $ans += min($left_max,$right_max)-$height[$i];
        }
        return $ans;
        */
        //------------方法一：暴力法 over-------------------
        
        
        //------------方法二：优化，动态编程？----------------
        /*
        $len = count($height);
        
        $left_max = array();
        $right_max = array();
        //求出 左边最大的值 的数组
        $left_max[0] = $height[0];
        for($i = 1; $i<$len;$i++){
            $left_max[$i] = max($left_max[$i-1],$height[$i]);
        }
        
        //求出 右边最大的值 的数组
        $right_max[$len-1] = $height[$len-1];
        for($i = $len-2; $i>=0; $i--){
            $right_max[$i] = max($right_max[$i+1],$height[$i]);
        }
        
        $ans = 0;
        for($i = 0; $i<$len;$i++){
            $ans += min($left_max[$i],$right_max[$i]) - $height[$i];
        }
        return $ans;  
        */
        //------------方法二：优化，动态规划？over-------------
        
        //------------方法三：双指针，骚操作--------------------
        $len = count($height);
        $left = 0;
        $right = $len - 1;
        $ans = 0;
        $right_max = 0;
        $left_max = 0;
        while($left < $right){
            if($height[$left] < $height[$right]){
                $height[$left] > $left_max ? $left_max=$height[$left] : $ans += $left_max - $height[$left];
                ++$left; 
            }else{
                $height[$right] > $right_max ? $right_max=$height[$right] : $ans += $right_max - $height[$right];
                --$right;
            }
        }
        return $ans;
        
        //------------方法三：双指针，骚操作 over---------------
        
        
    }
}



