原题链接：https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/

题目描述
给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。

示例：

给定一个链表: 1->2->3->4->5, 和 n = 2.

当删除了倒数第二个节点后，链表变为 1->2->3->5.
说明：

给定的 n 保证是有效的。

进阶：

你能尝试使用一趟扫描实现吗？


思路： 
    一次扫描，则需要至少两个指针(即双指针思想)。因为不确定倒数第几个，需要先进行一次循环，确定两个指针间的距离。
    本题中需要注意的是，php中类赋值属于引用，即使用同一块内存。 与C的指针略有不同，具体哪里不同，我需要继续总结一下。
    
    第二个注意的地方，循环确定两指针位置时，循环后 如果第二个指针已经出现了NULL，即 删除的是第一个，可以直接返回。
    
代码：
/**
 * Definition for a singly-linked list.
 * class ListNode {
 *     public $val = 0;
 *     public $next = null;
 *     function __construct($val) { $this->val = $val; }
 * }
 */
class Solution {

    /**
     * @param ListNode $head
     * @param Integer $n
     * @return ListNode
     */
    function removeNthFromEnd($head, $n) {
     
        //一趟扫描，双指针
        $list1 = $head;
        $list2 = $head;
        while($n > 0){
            $list2 = $list2->next;
            $n--;
        }
        
        if($list2 == null){
            //证明删除的是第一个
            return $head->next;
        }
        
        while($list2->next != null ){
            $list1 = $list1->next;
            $list2 = $list2->next;
        }
        
        $list1->next = $list1->next->next;
        
        return $head;
    }
}


