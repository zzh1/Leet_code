题目描述：
    给定两个以字符串形式表示的非负整数 num1 和 num2，返回 num1 和 num2 的乘积，它们的乘积也表示为字符串形式。

    示例 1:

    输入: num1 = "2", num2 = "3"
    输出: "6"
    示例 2:

    输入: num1 = "123", num2 = "456"
    输出: "56088"
    说明：

    num1 和 num2 的长度小于110。
    num1 和 num2 只包含数字 0-9。
    num1 和 num2 均不以零开头，除非是数字 0 本身。
    不能使用任何标准库的大数类型（比如 BigInteger）或直接将输入转换为整数来处理。

    来源：力扣（LeetCode）
    链接：https://leetcode-cn.com/problems/multiply-strings
    著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
    
    
思路：这种题很不喜欢写，可能有语言上相关的问题，熬了一天，看的题解写的。  还没完全通过。数据大到一定程度会出现问题

代码：
class Solution {

    /**
     * @param String $num1
     * @param String $num2
     * @return String
     */
    function multiply($num1, $num2) {
        $len1 = strlen($num1);
        $len2 = strlen($num2);
        
        if($num1 == 0 || $num2 ==0){
            return '0';
        }
        
        $res = '';
        
        for($i = $len2-1; $i>=0; $i--){
            $n2 = $num2[$i];
            //补0
            for($j = 0; $j<$len2-1-$i; $j++){
                $n2 = $n2.'0';
            }
            $temp = '';
            $n2 = (int)$n2;//字符串转int，对于最好的语言来说，多此一举
            var_dump($n2);
            for($j=$len1-1; $j>=0 || $carry !=0; $j-- ){
                $n1 = $j<0? 0 : $num1[$j];
                $product = ($n1*$n2+$carry)%10;
                $temp = $product.$temp;
                
                $carry = (int)floor(($n1*$n2+$carry)/10);
            }
            
            $res = self::addStrings($res,(string)$temp);  
            
        }
        return $res;
    }
    
    public function addStrings($num1,$num2){
        var_dump($num1);
        var_dump($num2);
        $len1 = strlen($num1);
        $len2 = strlen($num2);
        $res = '';
        for($i = $len1-1,$j = $len2-1; $i>=0 || $j>=0 || $carry>0; $i--,$j--){
            
            $x = $i < 0 ? 0 : $num1[$i];
            $y = $j < 0 ? 0 : $num2[$j];
            
            
            $product = ($x + $y + $carry) % 10;
            $res = $product.$res;
            
            $carry = floor(($x + $y + $carry) / 10);
        }
        return (string)$res;
    }
    
    
}


