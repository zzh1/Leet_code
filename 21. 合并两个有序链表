原题链接：https://leetcode-cn.com/problems/merge-two-sorted-lists/

题目：
    将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 

    示例：

    输入：1->2->4, 1->3->4
    输出：1->1->2->3->4->4

思路：
    本题思路很简单，两边的链表不断比较大小。将小的放到结果值后面，然后该链表指针向前移动一位。
    
    重点是，我对php中的对象，使用不灵活，核心代码前花了一些时间空间去 设置头节点，很不灵或方便。
    
    最后看了评论才想起，随便初始化一个0的节点 listNode。最后返回 listNode->next即可。
    同理第19题删除链表的倒数第n个节点也需要这样优化。

代码：
/**
 * Definition for a singly-linked list.
 * class ListNode {
 *     public $val = 0;
 *     public $next = null;
 *     function __construct($val) { $this->val = $val; }
 * }
 */
class Solution {

    /**
     * @param ListNode $l1
     * @param ListNode $l2
     * @return ListNode
     */
    function mergeTwoLists($l1, $l2) {
        
        //初始化
        $dummyHead = new ListNode(0);
        $result = $dummyHead;
        
        while( $l1!=null && $l2 != null){
            if($l1->val <= $l2->val){
                $result->next = $l1;
                $result = $result->next;
                $l1 = $l1->next;
                
            }else{
                $result->next = $l2;
                $result = $result->next;
                $l2 = $l2->next;
            }
        }
        
        if($l2 != null){
            $result->next = $l2;
        }else{
            $result->next = $l1;
        }
        
        return $dummyHead->next;
        
    }
}







